name: ðŸš€ release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

env:
  APP_NAME: rce-engine
  ARCHIVE_NAME: rce-engine_linux-x64.tar.gz
  CONTENT_TYPE: application/gzip
  GITHUB_REF_NAME: ${{ github.ref_name }}
  DOCKER_IMAGE: toolkithub/rce-engine

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          
      - name: Build and Package Binary
        run: |
          cargo build --release
          tar -czf "${ARCHIVE_NAME}" -C target/release "${APP_NAME}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}
          asset_name: ${{ env.ARCHIVE_NAME }}
          asset_content_type: ${{ env.CONTENT_TYPE }}
          github_token: ${{ secrets.GH_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker Image
        run: nix build .#docker

      - name: Load Docker Image
        run: |
          docker load -i result
          docker images

      - name: Push Docker Image
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          docker tag ${{ env.DOCKER_IMAGE }}:${VERSION} ${{ env.DOCKER_IMAGE }}:${VERSION}
          docker tag ${{ env.DOCKER_IMAGE }}:${VERSION} ${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_IMAGE }}:${VERSION}
          docker push ${{ env.DOCKER_IMAGE }}:latest
